import { byte } from '../decorators';{{#ifEquals variant "info"}}
import { Packet } from './base';{{/ifEquals}}{{#ifNotEquals variant "info"}}
import { SendablePacket } from './base';{{/ifNotEquals}}
import { PacketType } from './enums';{{#ifNotEquals variant "info"}}
// TODO keep only one of these
import type {
//  PacketData,
  PacketDataWithOptionalReqI,
//  PacketDataWithRequiredReqI,
} from './types';{{/ifNotEquals}}

/**
* TODO description
*/
export class IS_{{ name }} extends {{#ifNotEquals variant "info"}}SendablePacket{{/ifNotEquals}}{{#ifEquals variant "info"}}Packet{{/ifEquals}} {
  @byte() readonly Size = {{ size }};
  @byte() readonly Type = PacketType.ISP_{{ name }};
  @byte(){{#ifEquals variant "info"}} readonly{{/ifEquals}} ReqI = 0;
  @byte() readonly Zero = 0;{{#ifNotEquals variant "info"}}

  constructor(data?: IS_{{ name }}_Data) {
    super();
    this.initialize(data);
  }{{/ifNotEquals}}
}{{#ifNotEquals variant "info"}}

export type IS_{{ name }}_Data = PacketDataWithOptionalReqI<IS_{{ name }}>;{{/ifNotEquals}}
