import { byte } from '../utils';{{#ifEquals variant "info"}}
import { BasePacket } from './BasePacket';{{/ifEquals}}{{#ifNotEquals variant "info"}}
import { BaseSendablePacket } from './BaseSendablePacket';{{/ifNotEquals}}
import { PacketType } from './enums';{{#ifNotEquals variant "info"}}
import type {
  PacketData,
  PacketDataWithOptionalReqI,
  PacketDataWithRequiredReqI,
} from './types';{{/ifNotEquals}}

/**
* TODO description
*/
export class IS_{{ name }} extends {{#ifNotEquals variant "info"}}BaseSendablePacket{{/ifNotEquals}}{{#ifEquals variant "info"}}BasePacket{{/ifEquals}} {
  @byte() readonly Size = {{ size }};
  @byte() readonly Type = PacketType.ISP_{{ name }};
  @byte() ReqI = 0;
  @byte() readonly Zero: 0 = 0;{{#ifNotEquals variant "info"}}

  constructor(data?: IS_{{ name }}_Data) {
    super();
    this.initialize(data);
  }{{/ifNotEquals}}
}{{#ifNotEquals variant "info"}}

export type IS_{{ name }}_Data = PacketDataWithOptionalReqI<IS_{{ name }}>;{{/ifNotEquals}}