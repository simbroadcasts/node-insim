name: Validate

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x, 19.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Check Code Format
        uses: borales/actions-yarn@v4
        with:
          cmd: format:check

      - name: Lint
        uses: borales/actions-yarn@v4
        with:
          cmd: lint

      - name: Run Unit Tests
        uses: borales/actions-yarn@v4
        with:
          cmd: test --ci --reporters=default --reporters=jest-junit

      - name: Build
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Test Example Apps
        uses: borales/actions-yarn@v4
        with:
          cmd: test:examples

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (Node.js ${{ matrix.node-version }})
          path: junit.xml

  release:
    permissions:
      contents: write # to create release tags (cycjimmy/semantic-release-action)
      issues: write # to post release that resolves an issue (cycjimmy/semantic-release-action)

    needs: main
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Build
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
