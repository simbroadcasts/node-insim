name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    name: 'Build & Test'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x, 19.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Check Code Format
        uses: borales/actions-yarn@v4
        with:
          cmd: format:check
      - name: Lint
        uses: borales/actions-yarn@v4
        with:
          cmd: lint
      - name: Build
        uses: borales/actions-yarn@v4
        with:
          cmd: build
      - name: Test
        uses: borales/actions-yarn@v4
        with:
          cmd: test --ci --reporters=default --reporters=jest-junit
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results (Node.js ${{ matrix.node-version }})
          path: junit.xml

  publish-test-results:
    name: 'Publish Tests Results'
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          junit_files: 'artifacts/**/*.xml'
